name: Build MLC-LLM Android Runtime From Source

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            unzip \
            build-essential \
            clang \
            git \
            curl \
            python3-pip
          python -m pip install --upgrade pip
          pip install numpy

      - name: Cache Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.rustup
          key: rust-cache-${{ runner.os }}-v1

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustc --version
          cargo --version
          rustup target add aarch64-linux-android

      - name: Cache Android NDK
        uses: actions/cache@v3
        with:
          path: android-ndk-r25b
          key: android-ndk-r25b-${{ runner.os }}-v1

      - name: Set Up Android NDK r25b
        run: |
          if [ ! -d "android-ndk-r25b" ]; then
            wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
            unzip android-ndk-r25b-linux.zip
          fi
          echo "ANDROID_NDK_HOME=$(pwd)/android-ndk-r25b" >> $GITHUB_ENV
          echo "PATH=$(pwd)/android-ndk-r25b:$PATH" >> $GITHUB_ENV

      - name: Clone MLC-LLM Repository
        run: |
          git clone https://github.com/mlc-ai/mlc-llm.git
          cd mlc-llm
          git submodule update --init --recursive

      - name: Build MLC-LLM Native Library for Android
        run: |
          cd mlc-llm
          mkdir -p build/android
          cd build/android
          # Set Rust linker for Android target
          export CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android29-clang
          cmake -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
                -DANDROID_ABI=arm64-v8a \
                -DANDROID_PLATFORM=android-29 \
                -DTVM_USE_THREADING_NATIVE=ON \
                -DTVM_ENABLE_BACKTRACE=OFF \
                -DTVM_USE_BACKTRACE=OFF \
                -DTVM_ENABLE_FFI_TRACEBACK=OFF \
                -DCMAKE_CXX_STANDARD=17 \
                -DCMAKE_CXX_FLAGS="-fexceptions -frtti" \
                ../..
          make -j1 VERBOSE=1

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mlc-llm-android-lib
          path: mlc-llm/build/android
